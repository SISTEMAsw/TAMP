define(["virtualglobeviewer/GlobWeb","virtualglobeviewer/RenderContext","virtualglobeviewer/SceneGraph/SceneGraph","virtualglobeviewer/SceneGraph/Renderer","virtualglobeviewer/W3DSLayer","virtualglobeviewer/TileWireframeLayer","virtualglobeviewer/Loader/glTF/glTFLoader","virtualglobeviewer/CoordinateSystem","./AOIRenderer","app","openlayers"],function(a,b,c,d,e,f,g,h,i,j,k){"use strict";var l=function(c){if(this.canvas=$(c.canvas),!this.canvas)return void alert("[VGV::constructor] Please define a canvas element!. Aborting VGV construction...");b.minNear=1e-4,this.globe=new a.Globe({canvas:c.canvas,lighting:!1,tileErrorTreshold:3,continuousRendering:!1,backgroundColor:[.2,.2,.2,1],shadersPath:"/bower_components/virtualglobeviewer/shaders/"}),this.aoiLayer=new a.VectorLayer({opacity:1}),this.globe.addLayer(this.aoiLayer),this.layerCache={},this.overlayLayers=[],this.onPanEventCallback=null,this.onZoomEventCallback=null,this.navigation=new a.Navigation(this.globe,{inertia:!1});var d=this.navigation.pan.bind(this.navigation);this.navigation.pan=function(a,b){return j.isMapPanning?void console.log("prevent panning..."):(this.onPanEventCallback&&this.onPanEventCallback(this.navigation,a,b),void d(a,b))}.bind(this);var e=this.navigation.zoom.bind(this.navigation);this.navigation.zoom=function(a,b){return j.isMapZooming?void console.log("prevent panning..."):(this.onZoomEventCallback&&this.onZoomEventCallback(this.navigation,a,b),void e(a,b))}.bind(this),this.w3dsBaseUrl=c.w3dsBaseUrl,this.aoiRenderer=new i(this.globe,this.navigation,this.aoiLayer),this.aoiRenderer.setOnSelectionEndCallback(function(a){this.onNewAOICallback(a)}.bind(this))};return l.prototype.setOnPanEventCallback=function(a){this.onPanEventCallback=a},l.prototype.setOnZoomEventCallback=function(a){this.onZoomEventCallback=a},l.prototype.enableAOISelection=function(a,b){this.aoiRenderer.enableSelection(a,b)},l.prototype.disableAOISelection=function(){this.aoiRenderer.disableSelection()},l.prototype.removeFeatures=function(){this.aoiRenderer.removeFeatures()},l.prototype.addAreaOfInterest=function(a,b){this.aoiRenderer.addAOI(a,b)},l.prototype.setOnNewAOICallback=function(a){this.aoiRenderer.setOnSelectionEndCallback(a)},l.prototype.createCommonLayerOptionsFromView=function(a){var b={};return b.baseUrl=a.urls[0],b.style="",a.style&&(b.style=a.style),"WMS"===a.protocol?b.layers=a.id:b.layer=a.id,b.format=a.format||"image/jpeg","image/png"===b.format&&(b.transparent=!0),b},l.prototype.setColorRamp=function(a){this.colorRamp=a;var b=this.globe.sceneGraphOverlayRenderer;b&&b.setColorRamp(a),this.requestFrame()},l.prototype.getSupportedViews=function(a){var b=[],c=a.get("views"),d=!1;"undefined"==typeof c&&(c=[],c.push(a.get("view")));var e=_.find(c,function(a){return"W3DS"===a.protocol&&"vertical_curtain"===a.type}),f=_.find(c,function(a){return"WMTS"===a.protocol?(d=!0,!0):!1});if(!d){var g=_.find(c,function(a){return"WMS"===a.protocol});g&&b.push(g)}var h=_.find(c,function(a){return"DEM"===a.protocol}),i=_.find(c,function(a){return"WIREFRAME"===a.protocol});return e&&b.push(e),f&&b.push(f),h&&b.push(h),i&&b.push(i),b},l.prototype.addLayer=function(b,c){var d=void 0,g=!1,h=this.getSupportedViews(b);_.each(h,function(h){var i=b.get("name")+"-"+h.protocol,j=this.createCommonLayerOptionsFromView(h);j.time=this.currentToI;var k=this.layerCache[i];if("undefined"==typeof k)if("WMTS"===h.protocol){var l=_.extend(j,{matrixSet:h.matrixSet});d=new a.WMTSLayer(l)}else if("WMS"===h.protocol)d=new a.WMSLayer(j);else if("W3DS"===h.protocol){var m=_.extend(j,{renderOptions:{colorRamp:this.colorRamp,w3dsBaseUrl:this.w3dsBaseUrl}});d=new e(m)}else"WIREFRAME"===h.protocol?d=new f({outline:!0}):"DEM"===h.protocol?(d=new a.WCSElevationLayer({baseUrl:"http://data.eox.at/elevation?",coverage:"ACE2",version:"2.0.0"}),this.globe.setBaseElevation(d)):console.log('[VGV::addLayer] protocol "'+h.protocol+'" is not supported');else d=k.layer;c?this.globe.setBaseImagery(d):g?this.globe.setBaseElevation(d):(this.globe.addLayer(d),d.opacity(b.get("opacity")),k={model:b,layer:d,isBaseLayer:c},this.layerCache[i]=k,this.overlayLayers.push(k))}.bind(this))},l.prototype.removeLayer=function(a,b){console.log("removeLayer: "+a.get("name")+" (baseLayer: "+b+")");var c=!1,d=this.getSupportedViews(a);_.each(d,function(d){if(c="DEM"===d.protocol,b)this.globe.setBaseImagery(null);else if(c)this.globe.setBaseElevation(null);else{var e=a.get("name")+"-"+d.protocol,f=this.layerCache[e];if("undefined"!=typeof f){this.globe.removeLayer(f.layer);var g=_.indexOf(this.overlayLayers,f);this.overlayLayers.splice(g,1)}}}.bind(this))},l.prototype.sortOverlayLayers=function(){var a=_.sortBy(this.overlayLayers,function(a){return a.model.get("ordinal")});this.removeAllOverlays(),_.each(a.reverse(),function(a){console.log("sort: adding layer with ordinal: "+a.model.get("ordinal")),this.addLayer(a.model,a.isBaseLayer)}.bind(this))},l.prototype.removeAllOverlays=function(){_.each(this.overlayLayers,function(a,b){this.globe.removeLayer(a.layer)}.bind(this)),this.overlayLayers.length=0},l.prototype.clearCache=function(){this.layerCache={}},l.prototype.updateViewport=function(){this.globe.renderContext.canvas.width=this.canvas.width(),this.globe.renderContext.canvas.height=this.canvas.height(),this.globe.renderContext.updateViewDependentProperties(),this.globe.refresh()},l.prototype.zoomTo=function(a){if(a.tilt)this.navigation.zoomTo(a.center,a.distance,a.duration,a.tilt);else{var b=this.navigation.save();this.navigation.zoomTo(a.center,a.distance,a.duration,b.tilt)}},l.prototype.setTilt=function(a,b){var c=this.navigation.save(),d=c.distance*h.realEarthRadius;this.navigation.zoomTo(c.geoCenter,d,b||1,a)},l.prototype.setToI=function(a){this.currentToI=a,_.each(this.overlayLayers,function(b){b.layer.setTime&&(b.layer.setTime(a),this.globe.removeLayer(b.layer),this.globe.addLayer(b.layer))}.bind(this))},l.prototype.onOpacityChange=function(a,b){var c=this.layerCache[a+"-WMS"]||this.layerCache[a+"-WMTS"];"undefined"!=typeof c&&c.layer.opacity(b),this.requestFrame()},l.prototype.dumpLayerConfig=function(){_.each(this.overlayLayers,function(a){console.log("-------------------------------------------------"),console.log("Layer: "+a.model.get("name")),console.log("   ordinal: "+a.model.get("ordinal")),console.log("   opacity: "+a.layer.opacity())}.bind(this))},l.prototype.requestFrame=function(){this.globe.renderContext.requestFrame()},l});